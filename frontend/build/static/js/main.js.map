{"version":3,"sources":["components/profile/DataGrid.js","components/profile/Graphics.js","components/profile/Profile.js","components/motion/MotionElement.js","components/motion/MotionList.js","App.js","serviceWorker.js","index.js"],"names":["DataGrid","react_default","a","createElement","className","this","props","overall","text","cellSpacing","og","oo","cg","co","React","Component","Graphics","data","labels","datasets","label","borderWidth","type","lineTension","backgroundColor","borderColor","borderCapStyle","borderJoinStyle","pointBorderColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","es","options","legend","display","scales","xAxes","maintainAspectRatio","responsive","posStats","arr","amount","length","winrate","map","el","reduce","b","speaker","toFixed","Profile","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","profile","loaded","endpoint","placeholder","to_login","axios","get","paramsSerializer","qs","stringify","response","username","setState","fetchProfile","react_loader_spinner_default","color","height","width","Redirect","to","statistics","Fragment","profile_DataGrid","analytics","first_name","last_name","judgement","profile_Graphics","x","MotionElement","motion","infoslide","analysis","government_score","opposition_score","MotionList","motions_list","_this2","params","arguments","undefined","searchQuery","then","fetchData","event","target","value","toLowerCase","onChange","handleSearch","bind","motion_MotionElement","key","id","Main","HashRouter","href","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sSAiCeA,mLA3BP,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACKE,KAAKC,MAAMC,SAEhBN,EAAAC,EAAAC,cAAA,UAAKE,KAAKC,MAAME,OAEpBP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,SAAOM,YAAY,MACfR,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKE,KAAKC,MAAMI,IAChBT,EAAAC,EAAAC,cAAA,UAAKE,KAAKC,MAAMK,KAEpBV,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKE,KAAKC,MAAMM,IAChBX,EAAAC,EAAAC,cAAA,UAAKE,KAAKC,MAAMO,gBAnBrBC,IAAMC,mBC8CdC,mLA3CP,IAAMC,EAAO,CACTC,OAAQb,KAAKC,MAAMY,OACnBC,SAAU,CAAC,CACPC,MAAO,GACPC,YAAa,EACbJ,KAAMZ,KAAKC,MAAMW,KACjBK,KAAM,OACNC,YAAa,GACbC,gBAAiB,uBACjBC,YAAa,qBACbC,eAAgB,OAChBC,gBAAiB,QACjBC,iBAAkB,qBAClBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,qBAC3BC,sBAAuB,sBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,MAGxB,OACIlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAMnB,KAAMA,EACNoB,QAAS,CACLC,OAAQ,CACJC,SAAS,GAEbC,OAAQ,CACJC,MAAO,CAAC,CACJF,SAAS,KAGjBG,qBAAqB,EACrBC,YAAY,aArCf7B,IAAMC,oBCO7B,SAAS6B,EAASC,GACd,IAAMC,EAASD,EAAIE,OACbC,EAAUH,EAAII,IAAI,SAAAC,GAAE,OAAIA,EAAG,KAAIC,OAAO,SAACjD,EAAGkD,GAAJ,OAAUlD,EAAIkD,GAAG,GAAKN,EAC5DO,EAAUR,EAAII,IAAI,SAAAC,GAAE,OAAIA,EAAG,KAAIC,OAAO,SAACjD,EAAGkD,GAAJ,OAAUlD,EAAIkD,GAAG,GAAKN,EAClE,MAAO,CAAEA,SAAQE,QAASA,EAAQM,QAAQ,GAAID,QAASA,EAAQC,QAAQ,QAmG5DC,cA/FX,SAAAA,EAAYjD,GAAO,IAAAkD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAApD,KAAAkD,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAApD,KAAAoD,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAxD,KAAMC,KACDwD,MAAQ,CACTC,QAAS,GACTC,QAAQ,EACRC,SAAU,yBACVC,YAAa,aACbC,UAAU,GAPCX,4MAYQY,IAAMC,IAAIhE,KAAKyD,MAAMG,SAAU,CAAEK,iBAAkBC,IAAGC,oBAAvEC,UACOxD,KAAKyD,SAAUrE,KAAKsE,SAAS,CAAEZ,QAASU,EAASxD,KAAM+C,QAAQ,IACvE3D,KAAKsE,SAAS,CAAER,UAAU,EAAMH,QAAQ,kJAI7C3D,KAAKuE,gDAKL,IAAKvE,KAAKyD,MAAME,OAAQ,OACpB/D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAC0E,EAAA3E,EAAD,CAAQoB,KAAK,WAAWwD,MAAM,UAAUC,OAAO,MAAMC,MAAM,QAC3D/E,EAAAC,EAAAC,cAAA,wCAGR,GAAGE,KAAKyD,MAAMK,SAAU,OACtBlE,EAAAC,EAAAC,cAAC8E,EAAA,EAAD,CAAUC,GAAG,WAEf,IAAMC,EACFlF,EAAAC,EAAAC,cAACF,EAAAC,EAAMkF,SAAP,KACInF,EAAAC,EAAAC,cAACkF,EAAD,CACI9E,QAASqC,EAASvC,KAAKyD,MAAMC,QAAQuB,UAAU/E,SAASuC,OACxDtC,KAAK,+FACLE,GAAIkC,EAASvC,KAAKyD,MAAMC,QAAQuB,UAAU5E,IAAIoC,OAC9CnC,GAAIiC,EAASvC,KAAKyD,MAAMC,QAAQuB,UAAU3E,IAAImC,OAC9ClC,GAAIgC,EAASvC,KAAKyD,MAAMC,QAAQuB,UAAU1E,IAAIkC,OAC9CjC,GAAI+B,EAASvC,KAAKyD,MAAMC,QAAQuB,UAAUzE,IAAIiC,SAElD7C,EAAAC,EAAAC,cAACkF,EAAD,CACI9E,QAASqC,EAASvC,KAAKyD,MAAMC,QAAQuB,UAAU/E,SAASyC,QACxDxC,KAAK,4EACLE,GAAIkC,EAASvC,KAAKyD,MAAMC,QAAQuB,UAAU5E,IAAIsC,QAC9CrC,GAAIiC,EAASvC,KAAKyD,MAAMC,QAAQuB,UAAU3E,IAAIqC,QAC9CpC,GAAIgC,EAASvC,KAAKyD,MAAMC,QAAQuB,UAAU1E,IAAIoC,QAC9CnC,GAAI+B,EAASvC,KAAKyD,MAAMC,QAAQuB,UAAUzE,IAAImC,UAElD/C,EAAAC,EAAAC,cAACkF,EAAD,CACI9E,QAASqC,EAASvC,KAAKyD,MAAMC,QAAQuB,UAAU/E,SAAS8C,QACxD7C,KAAK,0GACLE,GAAIkC,EAASvC,KAAKyD,MAAMC,QAAQuB,UAAU5E,IAAI2C,QAC9C1C,GAAIiC,EAASvC,KAAKyD,MAAMC,QAAQuB,UAAU3E,IAAI0C,QAC9CzC,GAAIgC,EAASvC,KAAKyD,MAAMC,QAAQuB,UAAU1E,IAAIyC,QAC9CxC,GAAI+B,EAASvC,KAAKyD,MAAMC,QAAQuB,UAAUzE,IAAIwC,WAK1D,OACIpD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACVC,KAAKyD,MAAMC,QAAQwB,WADxB,IACqClF,KAAKyD,MAAMC,QAAQyB,WAExDvF,EAAAC,EAAAC,cAAA,SAAOM,YAAY,MACfR,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,2BAEJF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,6BAIRF,EAAAC,EAAAC,cAAA,mHAA2BE,KAAKyD,MAAMC,QAAQuB,UAAUG,YAE3DN,GAAc,IAEnBlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,kNACAF,EAAAC,EAAAC,cAACuF,EAAD,CACIxE,OAAQb,KAAKyD,MAAMC,QAAQuB,UAAU/E,QAAQ0C,IAAI,SAAA0C,GAAC,OAAIA,EAAE,KACxD1E,KAAMZ,KAAKyD,MAAMC,QAAQuB,UAAU/E,QAAQ0C,IAAI,SAAA0C,GAAC,OAAIA,EAAE,gBAzFxD7E,IAAMC,WCQb6E,mLArBP,OACI3F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,IAAiCC,KAAKC,MAAMW,KAAK4E,OAAjD,KACA5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAf,IAAoCC,KAAKC,MAAMW,KAAK6E,UAApD,KACA7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAAf,kFAEMC,KAAKC,MAAMW,KAAK8E,SAAY1F,KAAKC,MAAMW,KAAK8E,SAASC,iBAAmB,YAE9E/F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAAf,0DAEMC,KAAKC,MAAMW,KAAK8E,SACd1F,KAAKC,MAAMW,KAAK8E,SAASE,iBAAmB,YAEpDhG,EAAAC,EAAAC,cAAA,oBAhBQW,IAAMC,WC+CnBmF,cA3CX,SAAAA,EAAY5F,GAAO,IAAAkD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAApD,KAAA6F,IACf1C,EAAAC,OAAAE,EAAA,EAAAF,CAAApD,KAAAoD,OAAAG,EAAA,EAAAH,CAAAyC,GAAArC,KAAAxD,KAAMC,KACDwD,MAAQ,CACTqC,aAAc,GACdnC,QAAQ,EACRC,SAAU,0BACVC,YAAa,cANFV,2EAUM,IAAA4C,EAAA/F,KAAfgG,EAAeC,UAAAvD,OAAA,QAAAwD,IAAAD,UAAA,GAAAA,UAAA,GAAN,KACflC,IAAMC,IAAIhE,KAAKyD,MAAMG,SAAU,CAC3BoC,OAAQ,CAAEG,YAAeH,GACzB/B,iBAAkBC,IAAGC,YACtBiC,KAAK,SAAAxF,GAAI,OAAImF,EAAKzB,SAAS,CAAEwB,aAAclF,EAAKA,KAAM+C,QAAQ,kDAIjE3D,KAAKqG,UAAU,2CAGNC,GACT,IAAIH,EAAcG,EAAMC,OAAOC,MAAMC,cACrCzG,KAAKqG,UAAUF,oCAIf,OACIvG,EAAAC,EAAAC,cAACF,EAAAC,EAAMkF,SAAP,KACInF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SAAOmB,KAAK,OAAO4C,YAAY,YAAY9D,UAAU,eAC9C2G,SAAU1G,KAAK2G,aAAaC,KAAK5G,QACtCA,KAAKyD,MAAME,OAET3D,KAAKyD,MAAMqC,aAAalD,IAAI,SAAUC,GAClC,OAAOjD,EAAAC,EAAAC,cAAC+G,EAAD,CAAejG,KAAMiC,EAAIiE,IAAKjE,EAAGkE,OAF5CnH,EAAAC,EAAAC,cAAA,SAAIE,KAAKyD,MAAMI,sBAlCdpD,IAAMC,WCsBhBsG,2LAnBP,OACIpH,EAAAC,EAAAC,cAACmH,EAAA,EAAD,KACIrH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAMXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAemH,KAAK,KAAItH,EAAAC,EAAAC,cAAA,yBACrCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,WAAWC,UAAYpE,IACzCtD,EAAAC,EAAAC,cAACqH,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAYzB,cAbxCnF,cCMC6G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOjI,EAAAC,EAAAC,cAACgI,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM/B,KAAK,SAAAgC,GACjCA,EAAaC","file":"static/js/main.js","sourcesContent":["/* eslint-disable */\n\nimport React from 'react';\n\nclass DataGrid extends React.Component {\n    render() {\n        return (\n            <div className=\"statsContainer\">\n                <dl>\n                    <dt>\n                        {this.props.overall}\n                    </dt>\n                    <dd>{this.props.text}</dd>\n                </dl>\n                <div className=\"statsDetails\">\n                    <table cellSpacing=\"15\">\n                        <tbody>\n                        <tr>\n                            <td>{this.props.og}</td>\n                            <td>{this.props.oo}</td>\n                        </tr>\n                        <tr>\n                            <td>{this.props.cg}</td>\n                            <td>{this.props.co}</td>\n                        </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default DataGrid;\n\n","/* eslint-disable */\n\nimport React from 'react';\nimport { Line } from 'react-chartjs-2';\n\nclass Graphics extends React.Component {\n    render() {\n        const data = {\n            labels: this.props.labels,\n            datasets: [{\n                label: '',\n                borderWidth: 1,\n                data: this.props.data,\n                type: 'line',\n                lineTension: 0.2,\n                backgroundColor: 'rgba(75,192,192,0.4)',\n                borderColor: 'rgba(75,192,192,1)',\n                borderCapStyle: 'butt',\n                borderJoinStyle: 'miter',\n                pointBorderColor: 'rgba(75,192,192,1)',\n                pointBorderWidth: 2,\n                pointHoverRadius: 3,\n                pointHoverBackgroundColor: 'rgba(75,192,192,1)',\n                pointHoverBorderColor: 'rgba(220,220,220,1)',\n                pointHoverBorderWidth: 2,\n                pointRadius: 1,\n                pointHitRadius: 10,\n            }],\n        };\n        return (\n            <div className=\"graphic-wrapper\">\n                <Line data={data}\n                      options={{\n                          legend: {\n                              display: false,\n                          },\n                          scales: {\n                              xAxes: [{\n                                  display: false,\n                              }],\n                          },\n                          maintainAspectRatio: false,\n                          responsive: true,\n                      }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Graphics;\n\n","/* eslint-disable */\n\nimport React from 'react';\nimport axios from 'axios';\nimport qs from 'query-string';\nimport Loader from 'react-loader-spinner';\nimport DataGrid from './DataGrid';\nimport Graphics from './Graphics';\nimport { Redirect } from 'react-router-dom'\n\n// https://www.chartjs.org/docs/\n\nfunction posStats(arr) {\n    const amount = arr.length;\n    const winrate = arr.map(el => el[0]).reduce((a, b) => a + b, 0) / amount;\n    const speaker = arr.map(el => el[1]).reduce((a, b) => a + b, 0) / amount;\n    return { amount, winrate: winrate.toFixed(2), speaker: speaker.toFixed(2) };\n}\n\nclass Profile extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            profile: {},\n            loaded: false,\n            endpoint: '/analytics/api/profile',\n            placeholder: 'Loading...',\n            to_login: false,\n        };\n    }\n\n    async fetchProfile() {\n        const response = await axios.get(this.state.endpoint, { paramsSerializer: qs.stringify });\n        if (response.data.username) this.setState({ profile: response.data, loaded: true });\n        else this.setState({ to_login: true, loaded: true })\n    }\n\n    componentDidMount() {\n        this.fetchProfile();\n    }\n\n\n    render() {\n        if (!this.state.loaded) return (\n            <div className=\"loader\">\n                <Loader type=\"Triangle\" color=\"#00BFFF\" height=\"120\" width=\"120\" />\n                <span>Collecting your data...</span>\n            </div>\n        );\n        if(this.state.to_login) return (\n          <Redirect to=\"/login\" />\n        );\n        const statistics = (\n            <React.Fragment>\n                <DataGrid\n                    overall={posStats(this.state.profile.analytics.overall).amount}\n                    text=\"Всего игр сыграно\"\n                    og={posStats(this.state.profile.analytics.og).amount}\n                    oo={posStats(this.state.profile.analytics.oo).amount}\n                    cg={posStats(this.state.profile.analytics.cg).amount}\n                    co={posStats(this.state.profile.analytics.co).amount}\n                />\n                <DataGrid\n                    overall={posStats(this.state.profile.analytics.overall).winrate}\n                    text=\"Среднее место\"\n                    og={posStats(this.state.profile.analytics.og).winrate}\n                    oo={posStats(this.state.profile.analytics.oo).winrate}\n                    cg={posStats(this.state.profile.analytics.cg).winrate}\n                    co={posStats(this.state.profile.analytics.co).winrate}\n                />\n                <DataGrid\n                    overall={posStats(this.state.profile.analytics.overall).speaker}\n                    text=\"Средний спикерский\"\n                    og={posStats(this.state.profile.analytics.og).speaker}\n                    oo={posStats(this.state.profile.analytics.oo).speaker}\n                    cg={posStats(this.state.profile.analytics.cg).speaker}\n                    co={posStats(this.state.profile.analytics.co).speaker}\n                />\n            </React.Fragment>\n        );\n\n        return (\n            <div className=\"profile-wrapper\">\n                <div className=\"overall-statistics\">\n                    <div className=\"legend-wrapper\">\n                        <div className=\"header-name\">\n                            {this.state.profile.first_name} {this.state.profile.last_name}\n                        </div>\n                        <table cellSpacing=\"15\">\n                            <tbody>\n                            <tr>\n                                <td>ОП</td>\n                                <td>ОО</td>\n                            </tr>\n                            <tr>\n                                <td>ЗП</td>\n                                <td>ЗО</td>\n                            </tr>\n                            </tbody>\n                        </table>\n                        <span>Всего игр отсужено: {this.state.profile.analytics.judgement}</span>\n                    </div>\n                    {statistics || ''}\n                </div>\n                <div className=\"chart-container\">\n                    <h2>Спикерские баллы по отборочным играм</h2>\n                    <Graphics\n                        labels={this.state.profile.analytics.overall.map(x => x[0])}\n                        data={this.state.profile.analytics.overall.map(x => x[1])} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Profile;\n\n","/* eslint-disable */\n\nimport React from 'react';\n\nclass MotionElement extends React.Component {\n    render() {\n        return (\n            <li className=\"motion_element\">\n                <div className=\"motion-info\">\n                    <div className=\"motion-motion\"> {this.props.data.motion} </div>\n                    <div className=\"motion-infoslide\"> {this.props.data.infoslide} </div>\n                    <div className=\"motion-governmentscore\">\n                        Правительство:\n                        {(this.props.data.analysis) ? this.props.data.analysis.government_score : ' unknown'}\n                    </div>\n                    <div className=\"motion-oppositionscore\">\n                        Оппозиция:\n                        {(this.props.data.analysis) ?\n                            this.props.data.analysis.opposition_score : ' unknown'}\n                    </div>\n                    <hr />\n                </div>\n            </li>\n        );\n    }\n}\n\nexport default MotionElement;\n","/* eslint-disable */\n\nimport React from 'react';\nimport MotionElement from './MotionElement';\nimport axios from 'axios';\nimport qs from 'query-string';\n\nclass MotionList extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            motions_list: [],\n            loaded: false,\n            endpoint: '/analytics/api/motions/',\n            placeholder: 'Loading...',\n        };\n    }\n\n    fetchData(params = null) {\n        axios.get(this.state.endpoint, {\n            params: { 'searchQuery': params },\n            paramsSerializer: qs.stringify,\n        }).then(data => this.setState({ motions_list: data.data, loaded: true }));\n    }\n\n    componentDidMount() {\n        this.fetchData(null);\n    }\n\n    handleSearch(event) {\n        let searchQuery = event.target.value.toLowerCase();\n        this.fetchData(searchQuery);\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div>\n                    <input type=\"text\" placeholder=\"Search...\" className=\"search-field\"\n                           onChange={this.handleSearch.bind(this)} />\n                    {!this.state.loaded ?\n                        <p>{this.state.placeholder}</p> :\n                        this.state.motions_list.map(function (el) {\n                            return <MotionElement data={el} key={el.id} />;\n                        })\n                    }\n                </div>\n            </React.Fragment>);\n    }\n}\n\nexport default MotionList;\n","/* eslint-disable */\n\nimport React, { Component } from \"react\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport Profile from \"./components/profile/Profile\";\nimport MotionList from \"./components/motion/MotionList\";\nimport './App.css';\n\nclass Main extends Component {\n    render() {\n        return (\n            <HashRouter>\n                <div className=\"router-container\">\n                    {/*<h1>Simple SPA</h1>*/}\n                    {/*<ul className=\"header\">*/}\n                        {/*<li><NavLink exact to=\"/\">Home</NavLink></li>*/}\n                        {/*<li><NavLink to=\"/motions\">Stuff</NavLink></li>*/}\n                    {/*</ul>*/}\n                    <a className=\"header__logo\" href=\"/\"><span>Tabmaker</span></a>\n                    <div className=\"content\">\n                        <Route exact path=\"/profile\" component={ Profile } />\n                        <Route path=\"/motions\" component={ MotionList } />\n                    </div>\n                </div>\n            </HashRouter>\n        );\n    }\n}\n\nexport default Main;\n","/* eslint-disable */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/* eslint-disable */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (module.hot) {\n  module.hot.accept('./App', () => {\n    const NextApp = require('./App').default;\n    ReactDOM.render(\n            <NextApp />,\n            document.getElementById('root'),\n    );\n  });\n}\n"],"sourceRoot":""}